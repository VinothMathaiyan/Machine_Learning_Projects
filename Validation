import pandas as pd

def compare_columns(merged_df, key_column, column_pairs, output_file):
    """
    Compare specified columns from a merged dataframe and save discrepancies to an Excel file.

    Parameters:
    merged_df (pd.DataFrame): Merged DataFrame.
    key_column (str): Column name to identify rows.
    column_pairs (list of tuples): List of tuples where each tuple contains two column names to compare (col_df1, col_df2).
    output_file (str): Path to the output Excel file.
    """
    
    # Initialize a dictionary to store discrepancy DataFrames
    discrepancies_dict = {}
    
    # Iterate over each pair of columns
    for col1, col2 in column_pairs:
        # Find rows where the values in the columns are not equal
        discrepancies = merged_df[merged_df[col1] != merged_df[col2]]
        
        # If there are discrepancies, add them to the dictionary
        if not discrepancies.empty:
            discrepancies_dict[f"{col1}-{col2}"] = discrepancies[[key_column, col1, col2]]
    
    # Save discrepancies to an Excel file with multiple sheets
    with pd.ExcelWriter(output_file, engine='xlsxwriter') as writer:
        for comparison, df in discrepancies_dict.items():
            df.to_excel(writer, sheet_name=comparison, index=False)

# Example usage
df1 = pd.DataFrame({
    'key': ['A', 'B', 'C'],
    'value1': [1, 2, 3],
    'value2': [4, 5, 6]
})

df2 = pd.DataFrame({
    'key': ['B', 'C', 'D'],
    'value1': [2, 3, 4],
    'value3': [7, 6, 7]
})

# Merge the dataframes on the key column
merged_df = pd.merge(df1, df2, on='key', suffixes=('_df1', '_df2'))

# Specify the columns to compare
column_pairs = [('value1_df1', 'value1_df2'), ('value2_df1', 'value3_df2')]

# Path to the output Excel file
output_file = 'discrepancies.xlsx'

# Call the function and save the results to an Excel file
compare_columns(merged_df, 'key', column_pairs, output_file)
